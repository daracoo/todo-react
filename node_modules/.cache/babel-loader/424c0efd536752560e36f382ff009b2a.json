{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darko\\\\Desktop\\\\Internship\\\\React\\\\07-react-ts-starting-project\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport classes from './NewTodo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    // since it's for form we use FormEvent, if we have onClick -> MouseEvent\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n\n    if ((enteredText === null || enteredText === void 0 ? void 0 : enteredText.trim().length) === 0) {\n      return;\n    }\n\n    props.onAddToDo(enteredText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useRef","classes","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddToDo","form"],"sources":["C:/Users/Darko/Desktop/Internship/React/07-react-ts-starting-project/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef, useContext } from \"react\";\r\nimport { TodosContext } from \"../store/todos-context\";\r\nimport classes from './NewTodo.module.css'\r\n\r\nconst NewTodo: React.FC<{onAddToDo: (text: string) => void }> = (props) => {\r\n\r\n    const todoTextInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const submitHandler = (event: React.FormEvent) => { // since it's for form we use FormEvent, if we have onClick -> MouseEvent\r\n        event.preventDefault();\r\n\r\n        const enteredText = todoTextInputRef.current!.value\r\n\r\n        if(enteredText?.trim().length === 0){\r\n            return;\r\n        }\r\n\r\n        props.onAddToDo(enteredText);\r\n    }\r\n\r\n    return <form onSubmit={submitHandler} className={classes.form}>\r\n        <label htmlFor=\"text\">Todo text</label>\r\n        <input type=\"text\" id=\"text\" ref={todoTextInputRef}/>\r\n        <button>Add Todo</button>\r\n    </form>\r\n}\r\n\r\nexport default NewTodo;"],"mappings":";;;AAAA,SAASA,MAAT,QAAmC,OAAnC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAuD,GAAIC,KAAD,IAAW;EAAA;;EAEvE,MAAMC,gBAAgB,GAAGJ,MAAM,CAAmB,IAAnB,CAA/B;;EAEA,MAAMK,aAAa,GAAIC,KAAD,IAA4B;IAAE;IAChDA,KAAK,CAACC,cAAN;IAEA,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C;;IAEA,IAAG,CAAAF,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEG,IAAb,GAAoBC,MAApB,MAA+B,CAAlC,EAAoC;MAChC;IACH;;IAEDT,KAAK,CAACU,SAAN,CAAgBL,WAAhB;EACH,CAVD;;EAYA,oBAAO;IAAM,QAAQ,EAAEH,aAAhB;IAA+B,SAAS,EAAEJ,OAAO,CAACa,IAAlD;IAAA,wBACH;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAEV;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFG,eAGH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH,CArBD;;GAAMF,O;;KAAAA,O;AAuBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}